<!DOCTYPE html>
<html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta charset="UTF-8">
  <link rel="icon" type="image/svg+xml" href="http://127.0.0.1:5500/vite.svg">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="preconnect" href="https://fonts.googleapis.com/">
<link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin="">
<link href="document_files/css2.css" rel="stylesheet">

  <link rel="stylesheet" href="document_files/style.css">
  <title>document</title>
</head>

<body>
     <nav class="navigation">
        <div class="links">
            <a href="" class="link">
                </a><a href="" class="link">home</a>
                <a href="" class="link">service</a>
                <a href="" class="link">blog</a>
                <a href="" class="link">about</a>
                <a href="" class="link">more</a>
            
            
        </div>
        <button class="contact-us">
          contact-us
        </button>
     </nav>  
     <div class="body">
      <div class="image">
        <img src="document_files/law-icon-concept-engraved-metal-hexagonal-pedestral-backgrou.jpg" alt="not load" height="300px">
        <img src="document_files/law-icon-concept-engraved-metal-hexagonal-pedestral-backgrou.jpg" alt="not load" height="300px">
      </div>
      <div class="about_text">
        <p class="title">PARAGRAPH</p><br>
        <p class="basic">
          Paragraphs are medium-sized units of writing,
           longer than sentences, but shorter than sections, chapters, or entire works. 
           Because they connect the “small” ideas of individual sentences to a “bigger” idea, paragraph 
           structure is essential to any writing for organization, flow, and comprehension. 
        </p><br>
        <h1>Parts of a paragraph</h1><br>
        <p class="basic2">
Like other forms of writing, paragraphs follow a standard three-part structure with a beginning, middle, and
 end. These parts are the topic sentence, development and support, and conclusion. Topic sentences, also known
 as “paragraph leaders,” introduce the main idea that the paragraph is about. They shouldn’t reveal too much
 on their own, but rather prepare the reader for the rest of the paragraph by stating clearly what topic will
 be discussed. The development and support sentences act as the body of the paragraph. Development sentences
 elaborate and explain the idea with details too specific for the topic sentence, while support sentence
 provide evidence, opinions, or other statements that back up or confirm the paragraph’s main idea. 
 Last, the conclusion wraps up the idea, sometimes summarizing what’s been presented or transitioning to the
 next paragraph. The content of the conclusion depends on the type of paragraph, and it’s often acceptable to 
 end a paragraph with a final piece of support that concludes the thought instead of a summary. 
        </p>
        <button class="download">
          Download CV
        </button>
      </div>
     </div>
<!-- Code injected by live-server -->
<script>
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script>


</body></html>